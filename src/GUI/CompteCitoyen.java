/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.CompteDAO;
import Entities.Citoyen;
import Entities.Responsable;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yashiro
 */
public class CompteCitoyen extends javax.swing.JPanel {

    /**
     * Creates new form statistiques
     */
    public CompteCitoyen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCitoyens = new javax.swing.JTable();
        btnActiver = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Citoyens");

        tableCitoyens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableCitoyens);

        btnActiver.setText("jButton1");
        btnActiver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActiverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActiver)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnActiver)
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    private void btnActiverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActiverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActiverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActiver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCitoyens;
    // End of variables declaration//GEN-END:variables

public void afficher(){
        CompteDAO cit = new CompteDAO();
        List<Citoyen> listcit = new ArrayList<Citoyen>();
        listcit= cit.getAllCitoyens();
        String[] colName = new String[] {
           "Pseudo", "Nom", "Prénom", "Email", "Téléphone", "Etat"
            };
        
        DefaultTableModel model = new DefaultTableModel(colName, WIDTH);
        tableCitoyens.setModel(model);
        
        int i=0;
        int j=0;
        String status="Inconnu";
        for(Citoyen c:listcit)
        {
                if(c.getStatus()==1)
                    status="Actif";
                else if(c.getStatus()==0)
                    status="Non Actif";
                model.addRow(new Object[]{"", "", ""});
                
                
                tableCitoyens.getModel().setValueAt(c.getLogin(),i,j);
                tableCitoyens.getModel().setValueAt(c.getNom(),i,j+1);
                tableCitoyens.getModel().setValueAt(c.getPrenom(),i,j+2);
                tableCitoyens.getModel().setValueAt(c.getAdress_mail(),i,j+3);
                tableCitoyens.getModel().setValueAt(c.getPhone(),i,j+4);
                
                tableCitoyens.getModel().setValueAt(status,i,j+5);
            
           i+=1;
           //j+=1;
            
        }
        model.removeRow(tableCitoyens.getRowCount()-1);
        
        //DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
        //leftRenderer.setHorizontalAlignment( JLabel.CENTER );
        //tableResponsables.getColumnModel().getColumn(0).setCellRenderer( leftRenderer );
        //leftRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        desactiver();

}

public void desactiver(){
    tableCitoyens.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int row = tableCitoyens.rowAtPoint(evt.getPoint());
        int col = tableCitoyens.columnAtPoint(evt.getPoint());
        if (row >=0 && col >=0) {
            
            
            if(tableCitoyens.getValueAt(tableCitoyens.getSelectedRow(), 5) == "Actif")
                btnActiver.setText("Désactiver");
            else if(tableCitoyens.getValueAt(tableCitoyens.getSelectedRow(), 5) == "Non Actif")
                btnActiver.setText("Activer");
            
        }
    }
});


}













}

