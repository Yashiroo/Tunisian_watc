/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.EtablissementDAO;
import DAO.ThreadsDAO;
import Entities.Etablissement;
import Entities.Thread;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yashiro
 */
public class Statistiques extends javax.swing.JPanel {

    /**
     * Creates new form Statistiques
     */
    public Statistiques() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stats = new javax.swing.JTable();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        stats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(stats);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        //JavaFX_Statistics jfx = new JavaFX_Statistics();
        
    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable stats;
    // End of variables declaration//GEN-END:variables

public void afficherStatistiques(){
        ThreadsDAO td = new ThreadsDAO();
        EtablissementDAO ed = new EtablissementDAO();
        
        String[] colName = new String[] {
           "Etablissement", "Réclamations", "Réclamations résolues", "Réclamations non résolues"
            };
        DefaultTableModel model = new DefaultTableModel(colName, WIDTH); 
        stats.setModel(model);
        
         List<Entities.Thread> lt = new ArrayList<Entities.Thread>();
         lt=td.getAllThreads();
         int resolue=0;
         int nonresolue=0;
         int i=0;
         int j=0;
         
         for(Thread t:lt){
             
                if(t.getEtat().equals("resolue"))
                    resolue+=1;
                else if(t.getEtat().equals("non resolue"))
                    nonresolue+=1;
                
                
              //stats.getModel().setValueAt(lt.size(),i,1);
            i+=1;
        }
        
        List<Etablissement> le = new ArrayList<Etablissement>();
        le=ed.getAllEtab();
        int k=0;
        for(Etablissement e:le){
            
            stats.getModel().setValueAt(e.getName(),k,0);
            stats.getModel().setValueAt(ed.totalRec(e),k,1);
            stats.getModel().setValueAt(ed.recTraitees(e),k,2);
            stats.getModel().setValueAt(ed.recNonTraitees(e),k,3);
            model.addRow(new Object[]{""});
            k+=1;
        }
        
        model.removeRow(stats.getRowCount()-1);
    
    
}













}